<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hacking | Oh The Huge Manatee]]></title>
  <link href="http://ohthehugemanatee.github.io/blog/categories/hacking/atom.xml" rel="self"/>
  <link href="http://ohthehugemanatee.github.io/"/>
  <updated>2018-01-10T12:45:21+01:00</updated>
  <id>http://ohthehugemanatee.github.io/</id>
  <author>
    <name><![CDATA[Campbell Vertesi (ohthehugemanatee)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[That Time I Resurrected My Linux MacBook Pro]]></title>
    <link href="http://ohthehugemanatee.github.io/blog/2017/06/17/that-time-i-resurrected-my-linux-macbook-pro/"/>
    <updated>2017-06-17T23:06:02+02:00</updated>
    <id>http://ohthehugemanatee.github.io/blog/2017/06/17/that-time-i-resurrected-my-linux-macbook-pro</id>
    <content type="html"><![CDATA[<p>In the airport last week, my laptop stopped booting.</p>

<p>I have a 2012 Macbook Pro &ndash; yes, that coveted &ldquo;last good model&rdquo; &ndash; and it runs Ubuntu Linux. It&rsquo;s my roving office as I travel the world to conferences, performances, and job sites. So when I started it up at JFK airport this week and got a gray screen of death, I was a little concerned.</p>

<p>I tried starting into Startup Manager by holding the &ldquo;Option&rdquo; key. No bootable options appeared. Just an unhopeful file folder with a question mark. This was Not A Good Sign.</p>

<p><img class="center" src="/images/folder-questionmark.jpg" title="When this is all your computer does, it is Not A Good Sign." ></p>

<p>Generally this icon means that EFI couldn&rsquo;t find a valid startup device. This is not the first time I&rsquo;ve seen this &ndash; I&rsquo;ve played with my boot options enough to mess this up for myself a few times! I breathed a heavy sigh and tried starting onto the recovery partition by holding &ldquo;Command+R&rdquo;. I hadn&rsquo;t done anything in particular with Grub recently, but I had done some kernel updates, and you never know&hellip; But the recovery boot just got me a circle with a line through it, the universal &ldquo;no&rdquo; sign. This was an even worse sign.</p>

<p><img class="center" src="/images/mac-no-sign.png" title="This is an Even Worse Sign." ></p>

<p>This immediately threw the issue out of the realm of &ldquo;something I messed up myself&rdquo;, and into the less-entertaining realm of &ldquo;hardware failure.&rdquo;</p>

<p>At home I have some tools for diagnosing this sort of issue, but in the airport I had limited options &ndash; and unlimited time. So I started into Apple&rsquo;s built in Diagnostic Test mode by holding &ldquo;D&rdquo;. A lesser-known feature of the Apple boot manager, is that if it doesn&rsquo;t have a device to boot from, it can download an image from the Internet, load it into RAM, and boot from there. I had never had the chance to try it out before, but that didn&rsquo;t give much satisfaction as I grimly waited for it to work it&rsquo;s magic.</p>

<p>The diagnostic report looked fine, everything in tip-top shape! That is, until I went to the hard drive diagnostic page &ndash; there wasn&rsquo;t one. Not just no hard drive diagnostic, but completely no page for SATA diagnostics at all.</p>

<p>At this point it was clear that a catastrophic hard disk failure was my best-case scenario. Maybe it just skipped the drive diagnostic because no devices reported back, I hoped. There&rsquo;s something zen in that moment, when you find yourself <em>hoping</em> that you&rsquo;ve <em>only</em> lost your entire hard drive. All my work is backed up and relatively accessible, after all; I could stare digital death in the eye with only a hundred-Euro bill for a new drive. A motherboard failure, though &ndash; I tried not to think of it.</p>

<p>When I got home, I pulled out my toolkit. I opened up my mac to look for signs of burnout or other damage. Nothing. No smell, no scorches, no scratches. Not even any capacitor whine. I have a lot of respect for the engineers who designed a system that, even after 5 years of hard abuse, still retained it&rsquo;s &ldquo;new motherboard smell.&rdquo; I optimistically tried re-seating the SATA cable for my drive, but wasn&rsquo;t surprised when that didn&rsquo;t work.</p>

<p>I opened my desktop gaming computer, and plugged my laptop hard disk in there. I got the worst result possible from this test: the drive worked fine. It booted into my beautifully customized Linux desktop, dutifully selecting a random background image from the Internet &ndash; as luck would have it, a man screaming at his laptop in frustration. Though everyone knows that the silicon gods have a strong sense of irony.</p>

<p>I did a couple of follow up tests to confirm the diagnosis, but it was clear: the hard drive was fine, it was the SATA controller on my Macbook that had died. Everything else seemed intact; I could boot from a USB stick just fine, with a reasonable performance degradation (there&rsquo;s a ~33% speed difference between SATA3 and USB3 interfaces). But it couldn&rsquo;t detect anything connected internally.</p>

<p>The first goal was to get myself a computer for work. I&rsquo;m a contractor, which means that I don&rsquo;t take days off if I can help it. So I threw together a nice looking machine from spare parts I had laying around the house, and used my ex-laptop hard drive as a primary. When it first booted, I confess to a very satisfying &ldquo;I told you those parts would come in handy someday&rdquo; jab to my wife. She was very impressed, I could tell from the way she rolled her eyes at me. :)</p>

<p>My immediate need of a working machine for the office satisfied, the second priority was to buy a new laptop. I&rsquo;m on the road <strong>a lot</strong>. A desktop working environment &ndash; even one that lets me cheerfully tease my partner a little &ndash; is a band-aid at best. In fact, my next onsite was in Zürich in two weeks! I briefly considered taking my tower carry-on, before buckling down to find a computer.</p>

<p>My local electronics shop was a bust. They had plenty of beautiful looking machines that would run Linux perfectly nicely &ndash; those Lenovos are really coming along! &ndash; but they all had one fatal flaw: I can&rsquo;t work on a German keyboard.</p>

<p>I&rsquo;ve lived in Germany for 6 years now; I&rsquo;m comfortable in the language and culture, and I can complain about the bureaucracy with the best of them. But I just can&rsquo;t handle their terrible keyboard layout. QWERTZ might be fine for writing the language, but code and the *nix terminal are very QWERTY-centric. No, there was no way I would put up with a QWERTZ laptop for my next 5 years.</p>

<p>So I bought one of the popular Dell XPS 13 &ldquo;developer edition&rdquo; laptops, with Ubuntu pre-installed. I excitedly checked my order status right away, and saw the shipping date&hellip; was the day after I leave for Zürich. Shit.</p>

<p>So my old laptop is back in service, limping along for one last hurrah. The black box on the back looks like some impressive hardware hack, but it&rsquo;s just the old internal drive connected by USB.</p>

<p><img class="center" src="/images/me-and-my-busted-laptop.jpg" title="It&rsquo;s only a flesh wound!" ></p>

<p>Yes, I had to do the GRUB dance pretty extensively to get it booting. boot-repair is a wonderful tool, but nothing seems to handle elegantly switching between BIOS and EFI boot modes. I ended up having to copy EFI files from my USB stick by hand. As every Linux desktop user ever has said: &ldquo;if it&rsquo;s working I won&rsquo;t ask any questions.&rdquo;</p>

<p>Yes, I will take this computer into a board room in two weeks.</p>

<p>No, I am not ashamed. I&rsquo;m actually pretty satisfied with myself. It&rsquo;s been years since I&rsquo;ve built a computer myself, let alone rigged one up with duct tape and spare parts. It&rsquo;s been ages since I&rsquo;ve had to dig around in the Linux boot process (greatly improved since 2005, Linus be praised). And it&rsquo;s been a long time since I&rsquo;ve sported duct tape on my computer.</p>

<p>In a couple weeks I&rsquo;ll find out just how much special sauce Dell has put into their default Ubuntu setup to make it run. My setup is&hellip; not very default.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How and Why to Update the Modem/baseband Firmware on a Samsung Android Phone]]></title>
    <link href="http://ohthehugemanatee.github.io/blog/2015/04/04/how-and-why-to-update-the-modem-slash-baseband-firmware-on-a-samsung-phone/"/>
    <updated>2015-04-04T14:09:47+02:00</updated>
    <id>http://ohthehugemanatee.github.io/blog/2015/04/04/how-and-why-to-update-the-modem-slash-baseband-firmware-on-a-samsung-phone</id>
    <content type="html"><![CDATA[<p>If you have a Samsung Android phone, and you use Samsung&rsquo;s own version of Android, this article is not for you. When Samsung sends you updates to Android, they also will include any relevant updates to the modem/baseband firmware. So stop reading and go have a cup of tea or something, your job is done.</p>

<p>But for everyone who uses a custom ROM like <a href="http://cyanogenmod.org">Cyanogenmod</a>, <a href="http://www.paranoidandroid.co/">ParanoidAndroid</a>, or <a href="http://www.aokp.co/">AOKP</a>, sit up and pay attention: you&rsquo;re missing some key updates for your phone, and it&rsquo;s probably the reason you have trouble with cellular signal or battery life. I only learned this myself because my beloved Samsung S4 I-9505 has been having a hell of a time keeping signal lately. Over the last 6 months or so, it&rsquo;s picked up a quirk where it randomly drops the signal and starts to overheat in my pocket. Only toggling in and out of airplane mode to restart the connection solves the problem.</p>

<p>Turns out that just as Android gets regular updates, there are updates to the firmware of the cellular modem inside your phone. In any other device, I would expect the firmware to remain extremely stable, and new versions of the OS to include equally stable drivers. In the mobile phone world however, when Google updates Android, manufacturers update their firmware along with it. Mostly these are incremental updates to improve stability or battery life. Over time however, if you&rsquo;re updating your OS but not your firmware, your cellular modem is getting gradually more and more out of sync with what the driver in the OS expects of it.</p>

<p>In my case, I had a recent build of Cyanogenmod based on Android 4.4.4, last updated in March 2015, and a modem firmware that was based on 4.2.2, last updated in May 2013. So my phone was acting up. Maybe yours is doing the same.</p>

<p>Updating your modem firmware doesn&rsquo;t touch the rest of the operating system, and it doesn&rsquo;t touch your data. It&rsquo;s always a good idea to take a backup, but this is not a high risk operation for your data. If you&rsquo;re not careful you might make your signal situation even worse, but at least your photos and contacts will be OK!</p>

<p>Before I go any further, a word about vocabulary: the modem firmware can reasonably be called your &ldquo;baseband&rdquo;, and sometimes people use &ldquo;firmware update&rdquo; to refer to the combined updates to OS <em>and</em> modem firmware that get shipped out by manufacturers. I will only use &ldquo;firmware&rdquo; to describe the part that drives the modem, because that&rsquo;s what we&rsquo;re dealing with in this article. On other blog posts or forum posts people will not be so consistent, so read carefully!</p>

<p>In order to update your modem firmware, The first thing to do is to find out the Android version that you&rsquo;re using on your particular ROM. On most ROMs you can find out under &ldquo;Settings&rdquo;, &ldquo;About this phone&rdquo;. Look for the line that says &ldquo;Android Version&rdquo;.</p>

<p>Next, you have to find out the version of the most recent modem firmware release for your device, built for the same version of Android you&rsquo;re running. <a href="http://www.sammobile.com/devices/">SamMobile</a> has a fantastic catalog of devices with specifications and build histories for each one. Note that each carrier handles their own updates, so they package their own modem firmwares with slightly different serial numbers. There shouldn&rsquo;t be any significant difference, but check which one comes from your country and provider just in case, using their <a href="http://www.sammobile.com/firmwares/">Firmware lookup</a>. Note that if you want to download from SamMobile, you have to sign up for their download platform. I didn&rsquo;t &ndash; instead, I hunted for the right download with Google, and eventually found it on the great <a href="http://forum.xda-developers.com">xda developers</a> forum. There are a bunch of posts like <a href="http://forum.xda-developers.com/showpost.php?p=50965837">this one</a> with download links to tons of different firmwares. Make sure you look yours up, first!</p>

<p>If there isn&rsquo;t a build for exactly the same version of Android that you have, it&rsquo;s OK to use one a little bit behind. <em>Do not</em> take a modem firmware build that&rsquo;s newer than your Android build. That could leave you in a situation like this;</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/gVx4OOcIRXg" frameborder="0" allowfullscreen></iframe>


<p>If your phone is a GT-I9505 from T-Mobile Germany, you can shortcut this process and get the same download I did](<a href="http://forum.xda-developers.com/showthread.php?t=2192025&amp;page=503">http://forum.xda-developers.com/showthread.php?t=2192025&amp;page=503</a>). If you have any other device or are from any other region or phone company, <em>find the right firmware for your own phone</em>. Double check it, you can really mess up your phone if you do this wrong.</p>

<p>The updated firmware file is a .tar file, which contains two .bin files: modem.bin for the 3g modem in your phone, and NON-HLOS.bin for the LTE modem in your phone. You&rsquo;ll need both. Apparently if you&rsquo;re on Windows you can use <a href="http://www.downloadodin.info/">Odin</a> which will let you send both those .bin files at once by choosing the combined .tar file. I&rsquo;m on a Mac so I don&rsquo;t know about that. I used the excellent, open source, cross-platform tool <a href="http://glassechidna.com.au/heimdall/">Heimdall</a>, which has a great, easy command line interface. Download and install, and unpack that .tar file somewhere convenient.</p>

<p>Then get your phone into &ldquo;Download mode&rdquo;. For the Samsung Galaxy S4, this means:</p>

<p>1) Power off by holding the power button.
2) Simultaneously hold the home, volume down, and power keys until the phone comes on and asks you if you&rsquo;re SURE you want to go into Download mode. You are sure, so press volume up to continue.
3) Plug the phone into your computer.</p>

<p>Then in the Terminal, run:</p>

<p>``` bash
~$ heimdall detect
Device detected</p>

<p>~$ heimdall flash &mdash;APNHLOS ~/Downloads/Modem_GNG8_FULL/NON-HLOS.bin &mdash;MDM ~/Downloads/Modem_GNG8_FULL/modem.bin
```
(do not include the ~$ in your typing! It&rsquo;s just an indicator to show you what you type, and what comes back from the system)</p>

<p>&ldquo;heimdall detect&rdquo; tells heimdall to find your phone attached via USB. &ldquo;heimdall flash&rdquo; tells it to blow away the LTE modem firmware you have now with the file NON-HLOS.bin, and the 3G modem firmware you have now with the file modem.bin.</p>

<p>If all goes well, the phone will reset itself and boot back up normally. You can check to see that your flash worked by looking for the new serial number in your phone Settings.</p>

<p>Or perhaps you&rsquo;ll find the same problem I did: something else on my computer had already &ldquo;claimed&rdquo; this phone, so Heimdall errored out with &ldquo;libusbx: error [darwin_claim_interface] USBInterfaceOpen: another process has device opened for exclusive access. ERROR: Claiming interface failed!&rdquo; If you encounter this problem, you can solve it by manually shutting down that other software:</p>

<p><code>bash
~$ sudo kextstat |grep -v apple
Index Refs Address            Size       Wired      Name (Version) &lt;Linked Against&gt;
  134    0 0xffffff7f80eca000 0x4000     0x4000     com.devguru.driver.SamsungComposite (1.4.25) &lt;38 4 3&gt;
  136    0 0xffffff7f80ec3000 0x3000     0x3000     com.devguru.driver.SamsungACMControl (1.4.25) &lt;38 4 3&gt;
  138    0 0xffffff7f80ead000 0xc000     0xc000     com.devguru.driver.SamsungACMData (1.4.25) &lt;84 38 5 4 3&gt;
  141    0 0xffffff7f829fa000 0x6000     0x6000     net.tunnelblick.tun (1.0) &lt;7 5 4 1&gt;
</code>
Note the lines that say Samsung in them. Those are the Samsung drivers that are blocking Heimdall. Now I hate Kies even <em>more</em>! We can shut them down one at a time like this:</p>

<p><code>bash
~$ sudo kextunload -b com.devguru.driver.SamsungComposite
~$ sudo kextunload -b com.devguru.driver.SamsungACMControl
~$ sudo kextunload -b com.devguru.driver.SamsungACMData
</code></p>

<p>Then try the heimdall commands again. For my phone, I found greatly improved signal&hellip; and because it wasn&rsquo;t spinning extra cycles without signal, greatly improved battery life, too. So we know: every time you update your ROM, do a modem firmware update, too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Recover Photos and Data From a Keylocked Android Phone]]></title>
    <link href="http://ohthehugemanatee.github.io/blog/2014/05/18/recovering-photos-and-data-from-a-keylocked-android-phone/"/>
    <updated>2014-05-18T18:55:31+02:00</updated>
    <id>http://ohthehugemanatee.github.io/blog/2014/05/18/recovering-photos-and-data-from-a-keylocked-android-phone</id>
    <content type="html"><![CDATA[<p>Recently a good friend of mine passed away suddenly. Her family asked me to recover her photos and videos from her computer and android phone. The computer was easy enough, but the android phone posed a real problem. It had a keylock enabled, and USB debugging disabled. There was no external SD card to pull out, which meant that all the photos were stored on the internal memory. The phone was a totally stock Samsung Galaxy S3 mini. With a lot of reading, I worked out a way to get a data dump from her phone without having to bypass the keylock.</p>

<h2>1) Get Clockworkmod Recovery</h2>

<p><a href="https://www.clockworkmod.com/">Clockworkmod recovery</a> is a familiar tool to anyone who has ever rooted their Android phone or installed a custom ROM. I run my own phone on <a href="http://www.cyanogenmod.org/">Cyanogenmod</a>, so I knew the broad strokes of how to install and use it. If you haven&rsquo;t done this before: your Android device actually has several partitions on it for various kinds of data. Your device actually has several different boot &ldquo;modes&rdquo;, which are activated by various key combinations on startup. One of the boot modes, &ldquo;recovery&rdquo;, is specifically there to allow critical system access and maintenance. This is where Clockworkmod lives.</p>

<p>Download the <a href="https://www.clockworkmod.com/rommanager">Clockworkmod ROM for your device</a>. Use the &ldquo;Touch Recovery&rdquo; version if your touchscreen is working, since it&rsquo;s the easiest to use.</p>

<h2>2) Get a tool to flash your device</h2>

<p>There are many tools out there to help you flash various partitions on your device. Samsung devices are built for a tool called Odin, which was leaked from the company some time ago. Unfortunately Odin is Windows-only and not all that stable&hellip; but there is a great cross-platform, open source alternative called <a href="http://glassechidna.com.au/heimdall/">Heimdall</a>. Get Heimdall, at least, and optionally JOdin3.</p>

<p>Heimdall has an awesome command line interface, and a decent GUI if you&rsquo;re brave and know what you&rsquo;re talking about. I found it much easier to understand by using the Java based (AKA multi-platform) frontend <a href="http://casual-dev.com/2014/01/04/jodin3-web-browser-or-offline-flashing-tool/">JOdin3</a>. Even though in the end I couldn&rsquo;t get JOdin3 to do the job for me, its interface was intuitive enough that I could then understand what was going on from the command line.</p>

<p>So all you REALLY need here, is Heimdall or the equivalent for your device. But a GUI can be nice.</p>

<h2>3) Get Clockworkmod onto your device</h2>

<p><em>NOTE: THE INSTRUCTIONS IN THIS SECTION ONLY APPLY TO SAMSUNG DEVICES. A SIMPLE GOOGLE SEARCH WILL FIND APPROPRIATE INSTRUCTIONS FOR OTHER DEVICES.</em></p>

<h3>Get into Download mode</h3>

<p>In order for Heimdall/JOdin3/Odin/whatever to connect to your device, it has to be in &ldquo;Download&rdquo; mode, sometimes called &ldquo;Odin&rdquo; mode. Google will help you find instructions for your specific device, but for the Samsung Galaxy S3 Mini, I had to do the following:</p>

<ul>
<li>Power off. You can do this even when the keypad is locked, just by holding down the power button for long enough.</li>
<li>Press and hold the power, volume down, and home keys simultaneously until the phone starts and a warning screen appears.</li>
<li>Pay attention to the warning screen, and press volume up when you are ready to continue.</li>
</ul>


<p>A phone in Download mode looks kinda scary. There&rsquo;s not much on the screen, but it does explain quite clearly that it is in Download mode or Odin mode, and that the current firmware is the stock firmware.</p>

<p>Now plug the device into your computer via USB, and make sure Heimdall can see it by running this on the computer:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo heimdall detect</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>(note: I&rsquo;m not sure that you really need sudo for these operations, but might as well)</p>

<h3>Figure out which partition you&rsquo;re flashing</h3>

<p>In order to update the data on a partition, Heimdall needs to know how the partitions are laid out on your device. Samsung devices can dump their partition table in a format called PIT. Heimdall can actually handle getting the PIT file automatically, but you still need to have a look to see which partition you want to be working on. So first run</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo heimdall print-pit</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This will give you a full dump of all the partitions on your device. It&rsquo;s quite readable; look for the partition with the Flash Filename &ldquo;recovery.img&rdquo;. It should look something like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&mdash;&ndash; Entry #20 &mdash;&ndash;
</span><span class='line'>Binary Type: 0 (AP)
</span><span class='line'>Device Type: 2 (MMC)
</span><span class='line'>Identifier: 19
</span><span class='line'>Attributes: 5 (Read/Write)
</span><span class='line'>Update Attributes: 1 (FOTA)
</span><span class='line'>Partition Block Size: 491520
</span><span class='line'>Partition Block Count: 32768
</span><span class='line'>File Offset (Obsolete): 0
</span><span class='line'>File Size (Obsolete): 0
</span><span class='line'>Partition Name: Kernel2
</span><span class='line'>Flash Filename: recovery.img
</span><span class='line'>FOTA Filename:</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><em>DO NOT SKIP THIS STEP</em>. In theory all Samsung Galaxy S3 minis are identical, but if yours is not you could brick your device! It&rsquo;s very easy to do.</p>

<p>Figure out the Identifier for that partition. In my case it was &ldquo;19&rdquo;.</p>

<h3>Flash your recovery partition</h3>

<p>Now that you know which partition you want to flash, and you have a file to flash it with, you can actually flash it with heimdall. Note that your phone probably restarted after running that PIT command, so you&rsquo;ll have to get back into Download mode again. Then just run:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo heimdall flash &mdash;19 recovery.img</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In that command, &ldquo;19&rdquo; is the identifier of the partition I want to flash, and &ldquo;recovery.img&rdquo; is the clockworkmod ROM which I downloaded right at the beginning of the post. It will show you step by step what&rsquo;s going on, and then reboot the phone upon success.</p>

<h2>4) Connect to the phone with ADB</h2>

<p>Android has a wonderful tool in the SDK, intended for debugging problems with android devices. It&rsquo;s called ADB, and it lets you connect to the android device over USB and run a variety of commands. It even lets you get into a shell on the device! If you don&rsquo;t have ADB already, download the <a href="https://developer.android.com/sdk/index.html">Android Developer Tools</a>. If you aren&rsquo;t planning on actually developing and just need ADB (like me), then install from the slightly smaller package on that page, listed under &ldquo;Use an existing IDE&rdquo;.</p>

<p>Once you&rsquo;ve downloaded and installed the developer tools, you can find the ADB command in the platform-tools directory from the download.</p>

<p>ADB cannot communicate with a phone unless &ldquo;enable USB debugging&rdquo; is turned on in the phone&rsquo;s Settings interface&hellip; but when you&rsquo;re locked out that&rsquo;s impossible. Fortunately, if you boot into Clockworkmod Recovery, Debugging is turned on by default. So reboot into Clockworkmod by holding down the power, home, and volume up keys.</p>

<p>When clockworkmod recovery has loaded, test the connection with ADB by running:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb devices</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you see your device listed, you&rsquo;re in business! You can now pull files from the android device with &ldquo;adb pull [filename] [destination]&rdquo;. Of course, that&rsquo;s assuming you know your way around the android filesystem!</p>

<p>I found the easiest way to get all the data was to use ClockworkMod&rsquo;s built in backup system to make a backup of all data on the phone (this takes a few minutes), then I could pull the backups because I knew which directory they were in. After running the backup, all I had to do was</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb pull /data/media/clockworkmod/backup ~/Desktop/android-backup</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>All of my friend&rsquo;s photos, videos, and contacts were stored in the Data tar archive. I hope this helps someone else out there!</p>
]]></content>
  </entry>
  
</feed>
