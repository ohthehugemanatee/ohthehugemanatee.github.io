<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Open Source | Oh, The Huge Manatee]]></title>
  <link href="http://ohthehugemanatee.org/blog/categories/open-source/atom.xml" rel="self"/>
  <link href="http://ohthehugemanatee.org/"/>
  <updated>2019-01-07T12:52:07+01:00</updated>
  <id>http://ohthehugemanatee.org/</id>
  <author>
    <name><![CDATA[Campbell Vertesi (ohthehugemanatee)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[I'm Joining Microsoft, Because They're Doing Open Source Right]]></title>
    <link href="http://ohthehugemanatee.org/blog/2018/01/08/im-joining-microsoft-because-theyre-doing-open-source-right/"/>
    <updated>2018-01-08T20:32:50+01:00</updated>
    <id>http://ohthehugemanatee.org/blog/2018/01/08/im-joining-microsoft-because-theyre-doing-open-source-right</id>
    <content type="html"><![CDATA[<p>I&rsquo;m excited to announce that I&rsquo;ve signed with <strong>Microsoft</strong> as a Principal Software Engineering Manager. <strong>I&rsquo;m joining Microsoft because they are doing enterprise Open Source the Right Way, and I want to be a part of it</strong>. This is a sentence that I never believed I would write or say, so I want to explain.</p>

<p>First I have to acknowledge the history. I co-founded my first tech company just as the <a href="https://en.wikipedia.org/wiki/Halloween_documents">Halloween documents</a> were leaked. That&rsquo;s where the world learned that Microsoft considered Open Source (and Linux in particular) a threat, and was intentionally spreading FUD as a strategic counter. It was also the origin of their famous <a href="https://en.wikipedia.org/wiki/Embrace%2C_extend%2C_and_extinguish">Embrace, Extend, and Extinguish</a> strategy. The Microsoft approach to Open Source only got more aggressive from there, funneling money to <a href="https://en.wikipedia.org/wiki/SCO/Linux_controversies">SCO&rsquo;s lawsuits</a> against Linux and its users, calling OSS licensing a &ldquo;cancer&rdquo;, and accusing Linux of violating MS intellectual property.</p>

<p>I don&rsquo;t need to get exhaustive about this to make my point: <strong>for the first decade of my career (or more), Microsoft was rightly perceived as a villain in the OSS world</strong>. They did real damage and disservice to the open source movement, and ultimately to their own customers. Five years ago I wouldn&rsquo;t have even entertained the thought of working for &ldquo;the evil empire.&rdquo;</p>

<p>Yes, Microsoft has made nice movements towards open source since the new CEO (Satya Nadella) took over in 2014. They open sourced .NET and Visual Studio, they released Typescript, they joined the <a href="https://www.linuxfoundation.org/">Linux Foundation</a> and went platinum with the <a href="https://opensource.org/">Open Source Initiative</a>, but come on. I&rsquo;m an open source warrior, an evangelist, and developer. I could see through the bullshit. Even when Microsoft announced the Linux subsystem on Windows, I was certain that this was just another round of Embrace, Extend, Extinguish.</p>

<p>Then I met <a href="http://www.joshholmes.com/">Josh Holmes</a> at the <a href="https://www.phpconference.nl/">Dutch PHP Conference</a>.</p>

<p>First of all, I was shocked to meet a Microsoft representative at an open source conference. He didn&rsquo;t even have bodyguards. I remember my first question for him was &ldquo;What are you <em>doing</em> here?&rdquo;.</p>

<p>Josh told me a story about visiting startup conferences in Silicon Valley on behalf of Microsoft in 2007, and reporting back to Ballmer&rsquo;s office:</p>

<blockquote><p>&ldquo;The good news is, no one is making jokes about Microsoft anymore. The bad news is, <strong>they aren&rsquo;t even making jokes about Microsoft anymore</strong>.&rdquo;</p></blockquote>

<p>For Josh, this was a big &ldquo;aha&rdquo; moment. The booming tech startup space was focused on Open Source, so if Microsoft wanted to survive there, they had to come to the table.</p>

<p>That revelation led to the creation of the Microsoft Partner Catalyst Team. Here&rsquo;s Josh&rsquo;s explanation of the team and its job, from an <a href="https://www.youtube.com/watch?v=qkTioWRH-Ws">interview</a> at the time I met him:</p>

<blockquote><p>&ldquo;We work with a lot of startups, at the very top edge of the enterprise mix. We look at their toughest problems, and we go solve those problems with open source. We&rsquo;ve got 70 engineers and architects, and we go work with the startups hand in hand. We&rsquo;ll sit down for a little pair programming with them, sometimes it will be a large enough problem that will take it off on our own and we&rsquo;ll work on it for a while, and we&rsquo;ll come back and give them the code. Everything that we do ends up in Github under typically an MIT or Apache license if it&rsquo;s original work that we&rsquo;re doing on our own, or a lot of times we&rsquo;re actually working within other open source projects.&rdquo;</p></blockquote>

<p>Meeting with Josh was a turning point for my understanding of Microsoft. This wasn&rsquo;t just something that I could begrudgingly call &ldquo;OK for open source&rdquo;. This wasn&rsquo;t just lip service. This was a whole department of people that were doing <em>exactly</em> what I believe in. Not only did I like the sound of this; I found that <strong>I actually wanted to work with this group</strong>.</p>

<p>Still, when I considered interviewing with Microsoft, <strong>I knew that my first question had to be about &ldquo;Embrace, Extend, and Extinguish&rdquo;</strong>. Josh is a nice guy, and very smart, but I wasn&rsquo;t going to let the wool be pulled over <em>my</em> eyes.</p>

<p>Over the next months, I would speak with five different people doing exactly this kind of work at Microsoft. I  I did my research, I plumbed all my back-channel resources for dirt. And everything I came back with said <strong>I was wrong</strong>.</p>

<p>Microsoft really <em>is</em> undergoing a fundamental shift towards Open Source.</p>

<p>CEO Sadya Nadella is frank that <strong>closed-source licensing as a profit model is a dead-end</strong>. Since 2014, Microsoft has been transitioning their core business from licensed software to platform services. After all, why sell a license once, when you can rent it out monthly? So they move all the licensed products they can online, and rent, instead of selling them. Then they rent out the infrastructure itself, too &ndash; hence Azure. Suddenly flexibility is at a premium. As one CTO put it, <strong>for Azure to be Windows-only would be a liability</strong>.</p>

<p>This shift is old news for most of the world. As much as the Hacker News crowd still bitches about it as FUD, this strategic direction has been in and out of the financial pages for years now. Microsoft has pivoted to platform services. Look at their profits by product over the last 8 years:</p>

<p><img class="center" src="/images/microsoft-profits-by-product.png" title="Microsoft profits by product, over year." ></p>

<p>The trend is obvious: <strong>server and platform services are the place to invest</strong>. Office only remains at the top of the heap because it transitioned to SaaS. Even Windows license profits are declining. This means focusing on interoperability. Make sure <em>everything</em> can run on your platform, because anything else is to handicap the source of your biggest short- and medium-term profit. In fact, <strong>remaining adversarial to Open Source would kill the golden goose</strong>. Microsoft <em>has</em> to change its values in order to make this shift.</p>

<p>So much for financial and strategic direction; but this is a hundred-thousand-person company. That ship doesn&rsquo;t turn on a dime, no matter what the press releases tell you. So <strong>my second interview question became &ldquo;How is the transition going?&rdquo;</strong> This sort of question makes people uncomfortable: the answer is either transparently unrealistic, or critical of your environment and colleagues. Over and over again, I heard the right answer: It&rsquo;s freakin' hard.</p>

<p>MS has more than 40 years of proprietary development experience and institutional momentum. All of their culture and systems &ndash; from hiring, to code reviews, to legal authorizations &ndash; have been organized around that model. That&rsquo;s very hard to change! I heard horror stories about the beginning of the transition, having to pass every line of contribution past the Legal department. I heard about managers feeling lost, or losing a sense of authority over their own team. I heard about development teams struggling to understand that their place in an OSS project was on par with some Rando Calrissian contributor from Kansas. And I heard about how the company was helping people with the transition, changing systems and structures to make this cultural shift happen.</p>

<p>The stories I heard were important evidence, which contradicted the old narrative I had in my head. <strong>Embrace, extend, extinguish does not involve leadership challenges, or breaking down of hierarchies</strong>. It does not involve personal struggle and departmental reorganization. The stories I heard evidenced an organization trying a real paradigm shift, for tens of thousands of people around the world. It is not perfect, and it is not finished, but I believe that the transition is real.</p>

<p><strong>When you accept that Microsoft is trying to reorient its own culture to Open Source, suddenly all those &ldquo;transparent&rdquo; PR moves you dismissed get re-framed</strong>. They are accomplishments. It&rsquo;s incredibly difficult to change the culture of one of the biggest companies in the world&hellip; but today, almost half of Azure users run Linux. Microsoft&rsquo;s virtualization work made them the <a href="http://www.techradar.com/news/software/operating-systems/inside-the-linux-kernel-3-0-1035353/2">fifth largest contributor to the 3.x Linux kernel</a>. Microsoft maintains <a href="https://octoverse.github.com/">the biggest project on Github (by contributor count)</a>. They maintain a BSD distribution <em>and</em> a Linux distribution. And a huge part of LXD (the container-based virtualization system for Linux) comes from Microsoft&rsquo;s work with Canonical.</p>

<p>That&rsquo;s impressive for any company. But Microsoft? It boggles the mind. This level of contribution is not lip-service. You don&rsquo;t maintain a 15 thousand person community just for PR. <strong>Microsoft is contributing as much or more to open source than many other major players, who have had this in their culture from the start</strong> (Google, Facebook, Twitter, LinkedIn&hellip;). It&rsquo;s an accomplishment, and it&rsquo;s impressive!</p>

<p>In the group I&rsquo;m entering, a strong commitment to Open Source is built into the project structure, the team responsibilities, and the budgeting practice. Every project has time specifically set aside for contribution; developers' connections to their communities are respected and encouraged. After a decade of working with companies who try to engage with open source responsibly, I can say that <strong>this is the strongest institutional commitment to &ldquo;giving back&rdquo; that I have ever seen</strong>. It&rsquo;s a stronger support for contribution than I&rsquo;ve ever been able to offer in any of my roles, from sole proprietor to CTO.</p>

<p>This does mean a lot more work outside of the Drupal world, though. I will still attend Drupalcons. I will still give technical talks, participate, and help make great open source communities for Drupal and other OSS projects. If anything, I will do those things <em>more</em>. And I will do them wearing a Microsoft shirt.</p>

<p>Microsoft is making a genuine, and enormous, push to being open source community members and leaders. From everything I&rsquo;ve seen, they are doing it extremely well. From the outside at least, <strong>this is what it looks like to do enterprise Open Source The Right Way</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DD-WRT, Versioning, and the Linksys WRT54G Wireless Router]]></title>
    <link href="http://ohthehugemanatee.org/2010/12/dd-wrt-versioning-and-linksys-wrt54g.html"/>
    <updated>2010-12-20T12:47:00+01:00</updated>
    <id>http://ohthehugemanatee.org/2010/12/dd-wrt-versioning-and-linksys-wrt54g</id>
    <content type="html"><![CDATA[<p></p>

<div class="css-full-post-content js-full-post-content">
I have had all sorts of trouble with the wireless situation in my apartment. &nbsp;The layout of the place is such that the kitchen sits in between the two major rooms (living room and bedroom), and I swear those kitchen walls must be made of lead. &nbsp;No wireless signal seems to get through. &nbsp;I have phone jacks for ADSL in the living room and bedroom, nothing in between.<div><br /></div><div>So I hooked up my Orange Livebox (with wifi) in one room, and my&nbsp;<a href="http://en.wikipedia.org/wiki/Linksys_WRT54G_series">Linksys WRT54G (v.4)</a>&nbsp;in the other, to act as a repeated wifi network. &nbsp;I was already using the badass <a href="http://www.dd-wrt.com/site/index">DD-WRT firmware</a>&nbsp;so I could use the Linksys router as a wifi adapter for my wired desktop (in serious terms, it was acting as a network bridge to a wired LAN, to which my desktop was connected). &nbsp;This effectively made my Linksys router into a repeater bridge, which is a pretty awesome piece of functionality for an 8 year old, $45 router. &nbsp;</div><div><br /></div><div>Except it didn't work properly. &nbsp;I would get dropped packets, slowdown over long periods of uptime, and even skype wasn't reliable over the connection. &nbsp;It got to the point where I would make sure I was sitting beside the "good" router to make Skype calls (an important part of my day job). &nbsp;</div><div><br /></div><div>So I turned off the linksys for awhile, and tried working with just the Orange Livebox as my wifi router. &nbsp;I still had the same problems - it turned out that the bad router was NOT the hacked one! &nbsp;So I tried it the other way around: I disabled wifi on my Livebox, and set up the Linksys as a simple wireless router.</div><div><br /></div><div>This was definitely better - it turned out that just the Linksys, when placed correctly, CAN get a decent wireless signal to the entire apartment. &nbsp;(In a few days I'm going to try modding the antennas to be more directional to see if that helps). &nbsp;But I still got connection drops! &nbsp;</div><div><br /></div><div>At least now it was a more regular pattern. &nbsp;Skype would be fine, but I would get about 1 second dropouts in audio every 30 seconds or so. &nbsp;Looking at my Skype "advanced call quality" window, I could see that Jitter was high, so I identified that as a possible culprit. &nbsp;I also noted that the connection quality was listed as "Local: Good; Remote: Bad."</div><div><br /></div><div>Here is where I get on my soapbox. &nbsp;I CAN'T STAND "simplified," "user-friendly" summaries that don't offer more information. &nbsp;Remote: Bad. &nbsp;OK, I know there's a problem with the remote network. &nbsp;But I was connected through two layers of firewall, through two layers of private IP - my wireless network, on the 10.10.10.x subnet, and my Orangebox LAN, on the 192.168.1.x subnet. &nbsp;Were both those subnets considered "Local"? &nbsp;Was it possible that the remote connection at fault was between Linksys and Livebox? &nbsp;Or is Remote: Bad because I'm conferencing with colleagues across the US, Canada, Cambodia, Australia, Slovakia, and Paris? &nbsp;I'm happy that Skype wants to simplify my troubleshooting, but "Remote: Bad" has to give more detail to be useful.</div><div><br /></div><div>Determined to fix the problem, I tried a ping test to my router. &nbsp;I found about a 2% packet loss, happening in chunks every 30 seconds or so. &nbsp;</div><div><br /></div><div>So I checked out the dd-wrt website. &nbsp;My router firmware was current, according to the&nbsp;<a href="http://www.dd-wrt.com/site/support/router-database">page for my model</a>&nbsp;in the Router Database linked from their front page. &nbsp;In this case, the database recommends firmware revision 13064, 10/10/09. &nbsp;So I started to browse the <a href="http://www.dd-wrt.com/phpBB2/">forums</a>. &nbsp;Right off the bat, I was guided to a couple of sticky posts at the top: the <a href="http://www.dd-wrt.com/phpBB2/viewtopic.php?t=51486">peacock thread</a>&nbsp;and the <a href="http://www.dd-wrt.com/phpBB2/viewtopic.php?t=52043">firmware recommendation</a> thread. &nbsp;They both indicated:</div><blockquote><i>"The router database has recommended some less stable builds, including SP1 and 13064 (10/10/09) build. I suggest using the builds that are recommended here or in Redhawk's announcement above, rather than the ones in the router database. SP1 is full of bugs, and while 13064 is not nearly as bad, some are reporting connection issues fairly regularly. Sometimes the router database also has had the wrong build type. The router database is being worked on improve the recommendations."</i></blockquote>and<br /><br /><blockquote><i>"The Database may recommend bad builds and you should look [in this forum post] for recommended builds that have proven to be stable from actual user testing."</i></blockquote>In other words: the router database is full of known bad information, use the recommendations in the forums instead. &nbsp;Sometimes "recommended" builds even BRICK routers! &nbsp;In my case, the recommended firmware was known to cause connection issues, including dropped packets and disconnects. <br /><br />Maybe I'm being old-fashioned, but I think this is a <b>really bad</b>&nbsp;way to run an open source project website. &nbsp;It's great to have a convenient, easy-to-use router database linked on the front page. &nbsp;Firmware decisions are difficult for most people, so this is a fantastic tool... if it's properly maintained. &nbsp;&nbsp;If it isn't, it's just a very attractive, easy-to-use tool to tear your hair out.<br /><br />Imagine if Ubuntu's apt repositories recommended packages that were known-incompatible with your hardware. &nbsp;Ubuntu would correct the system IMMEDIATELY, or bring it offline until they could. &nbsp;This was a major concern when distros started working with centralized package repositories, and open source organizations put a lot of effort into keeping these "recommended software" databases functional for 99% of users with every update. &nbsp;Hell, Redhat's CentOS is so conservative about updates, some common packages are YEARS behind! <br /><br />The lesson here, is that a software recommendation database has to recommend WORKING software to be useful. &nbsp;And the DD-WRT firmware database is not. &nbsp;This makes it worse than useless - it makes it misleading, and potentially damaging to your hardware.<br /><br />I'm not a complete dick though - I understand. &nbsp;It's clear the DD-WRT team put a lot of effort into their recommendation database. &nbsp;With a few updates to the back end to simplify the process of keeping it up to date, maybe their volunteers would have an easier time of it. &nbsp;As I said, it's a fantastic tool. &nbsp;There's no need to abandon it.... just a few more tweaks or another round of updates and it could be perfect!<br /><br />But while they organize these tweaks or updates, the DD-WRT team should put up a prominent disclaimer. &nbsp;It's not complicated to add a line to the front page, right below the firmware recommendation link. &nbsp;Just one line that says "This information may not be current. &nbsp;Please check the forum before selecting your firmware!" &nbsp;If you put the line on the recommendation page template, you can go even further and actually link to the forum page for the user's model. &nbsp;There are seven chipset families supported by DD-WRT - that's only seven URL possibilities to deal with. &nbsp;Give the users a chance to find the correct information before they brick their routers or give up on open source firmware entirely. <br /><br />Apparently the DD-WRT wiki has more up to date information per router model. &nbsp;You could just as easily link there instead of the router database. &nbsp;Or connect the two, so the router database shows you the wiki page for your model along with the summary information. &nbsp;There are lots of technical solutions we could implement here, but the bottom line is, WARN YOUR USERS if the information in your software recommendation database is out of date, apocryphal, or inaccurate. <br /><br />Oh, and for my Linksys WRT54G v.4? &nbsp;The appropriate firmware to use is linked from the (sticky) <a href="http://www.dd-wrt.com/phpBB2/viewtopic.php?t=52043">Broadcom recommendations</a> forum post: <a href="ftp://dd-wrt.com/others/eko/BrainSlayer-V24-preSP2/08-12-10-r14929/broadcom/">Brainslayer build 14929</a>&nbsp;. &nbsp;This is only a best firmware for my specific model, though - if you have another Broadcom-based router, or even another WRT54G model, <b>read that forum post.</b>&nbsp;&nbsp;It will help you pick the right firmware for your router, unlike the router recommendation database and this blog post.<br /><br />Yet another evening lost to cursing at computers.
</div>


<p></p>
]]></content>
  </entry>
  
</feed>
